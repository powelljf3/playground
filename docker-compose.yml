version: "3.5"
services:
  #PHP fpm Service
  app-php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app-php
    restart: unless-stopped
    tty: true
    volumes:
      - .:/application
    ports:
      - "9000:9000"
    working_dir: /application
    depends_on:
      - app-mysql
    networks:
      - app-network

  #Nginx Service
  app-webserver:
    image: nginx:alpine
    container_name: app-webserver
    restart: unless-stopped
    tty: true
    volumes:
      # use nginx config
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
      - .:/application
    ports:
      - "80:80"
    depends_on:
      app-php:
        condition: service_started
      app-mysql:
        condition: service_healthy
    networks:
      - app-network

  #MySQL Service
  app-mysql:
    image: mysql:8
    container_name: app-mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    working_dir: /application
    volumes:
      # auto load ./docker/schema.sql on up
      - ./docker/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - .:/application
    environment:
      MYSQL_DATABASE: playground
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: playground
      MYSQL_PASSWORD: ${DB_PASSWORD}
    networks:
      - app-network
    healthcheck:
      test: mysqladmin ping -h localhost -p$$MYSQL_ROOT_PASSWORD && test '0' -eq $$(ps aux | awk '{print $$11}' | grep -c -e '^mysql$$')
    command: mysqld --general-log=1 --general-log-file=/application/mysql-general.log

#Docker Networks
networks:
  app-network:
    driver: bridge
